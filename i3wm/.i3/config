# vim:ft=i-13

# TODO Create a base configuration
# sed -i 's/eDP1/DP1/' i3/base_config
# TODO move KWin/KDE related configuration to other file

# NOTES:
# Use always " instead of '

# Use Super
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

focus_follows_mouse yes

# Default layout mode for new containers
# workspace_layout TODO

# Hide edge borders: `both` or `smart`
hide_edge_borders both

# Border style for new windows TODO 4, 5, 6?
new_window pixel 6

# Hide window title
#for_window [class=".*"] border pixel 0

# Window decoration colors (HEX 6 chars)
# Border: Two lines at the top of the window
# Background: Color around child window
# Text: Window title
# New window indicator: indicates where a new windows will be placed

# TODO use colour variables
set $red #ff0000
set $white #ffffff 

# Current workspace and focused window TODO orange?
client.focused $red $red $white $red

# Not focused window (current or not workspace)
client.focused_inactive #4488ff #4488ff $white #2e9ef4

# Neither current workspace nor window
client.unfocused #888888 #bbbbbb $white #888888

# Urgent window
client.urgent $red $red $white $red

# TODO
client.background $white

# Disable automatic back-and-forth when switching to the current workspace
workspace_auto_back_and_forth no

# Delay urgency hint reset on workspace change
force_display_urgency_hint 500 ms

set $ws1 "1:edit"
set $ws2 "2:console"
set $ws3 "3:web"
set $ws4 "4:communicate"
set $ws5 "5:read"
set $ws6 "6:visual"
set $ws7 "7:media"
set $ws8 "8:net"
set $ws9 "9:explore"
set $ws0 "0:inbox"
set $ws_ "-:limbo"
set $ws__ "=:daemons"

set $laptop_display DP-3
set $left_vertical_display DP-4.1
set $right_vertical_display DP-@s1@s2@s3j
# TODO Sometimes are DP-2.x !
# set $left_vertical_display DP-2.1
# set $right_vertical_display DP-2.2
set $ultra_wide_display DP-2
# TODO Sometimes is DP-4 !
# set $ultra_wide_display DP-4

# TODO customizable
workspace $ws1 output $ultra_wide_display
workspace $ws2 output $laptop_display
workspace $ws3 output $ultra_wide_display
workspace $ws4 output $laptop_display
workspace $ws5 output $left_vertical_display
workspace $ws6 output $left_vertical_display
workspace $ws7 output $right_vertical_display
workspace $ws8 output $right_vertical_display
workspace $ws9 output $right_vertical_display
workspace $ws0 output $left_vertical_display
workspace $ws_ output $right_vertical_display
workspace $ws__ output $right_vertical_display

# Sound volume buttons
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%-
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+
bindsym XF86AudioMute exec amixer -D pulse sset Master 0%

# Brightness buttons (from http://i3wm.org/docs/user-contributed/lzap-config.html) FIXME hdp
bindsym XF86MonBrightnessUp exec xbacklight -inc 5
bindsym XF86MonBrightnessDown exec xbacklight -dec 5

# Lock touchpad TODO
# bindsym XF86Touch exec ~/.i3/touchpad.sh

# Start a terminal
bindsym $mod+Return exec ~/.i3/shell.sh

# Kill focused window
bindsym $mod+Escape kill

# Start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run

# Use Kupfer as launcher
# bindsym $mod+d exec albert
# bindsym $mod+d exec synapse
bindsym $mod+d exec krunner

# vim-anywhere
bindsym Control+Mod1+v exec ~/.vim-anywhere/bin/run

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Split in vertical orientation
bindsym $mod+v split v
# Split in horizontal orientation
bindsym $mod+Shift+v split h

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+a layout tabbed
bindsym $mod+s layout stacking
bindsym $mod+g layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+Shift+p focus child
# bindsym $mod+i focus child

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# TODO pen workspace
# bindsym $mod+0 workspace $ws0

# Use `xev -event keyboard` to get code
bindcode $mod+20 workspace $ws_
bindcode $mod+21 workspace $ws__

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0
bindcode $mod+Shift+20 move container to workspace $ws_
bindcode $mod+Shift+21 move container to workspace $ws__

# Move workspace to display
bindsym $mod+Shift+a move workspace to output left
bindsym $mod+Shift+s move workspace to output down
bindsym $mod+Shift+d move workspace to output up
bindsym $mod+Shift+f move workspace to output right

# Reload the configuration file
bindsym $mod+Shift+r reload

# Restart i3 inplace (preserves the layout/session, can be used to upgrade i3)
bindsym $mod+Control+Mod1+r restart
# Exit i3 (logs you out of your X session)
bindsym $mod+Control+Mod1+e exec "i3-nagbar -t warning -m 'Do you really want to exit i^3? This will end your X session.' -b 'Yes' 'i3-msg exit'"
# Shutdown
bindsym $mod+Control+Mod1+p exec "i3-nagbar -t warning -m 'Quit?' -b 'Yes' 'sudo shutdown -P now'"

# Toggle Plasma panel when pressing Super (keycode is 133) FIXME: when pressing and releasing with other keys
# bindcode 133 exec "qdbus org.kde.plasmashell /PlasmaShell evaluateScript 'p = panelById(panelIds[0]); p.height = 48'"
# bindcode 133 --release exec "qdbus org.kde.plasmashell /PlasmaShell evaluateScript 'p = panelById(panelIds[0]); p.height = 0'"

# Percentage
set $resize_step_tiling 5
# Pixels TODO: based on screen size
set $resize_step_floating 60
# Pixels or percentage
set $resize_small_step 1

# Resize floating and tilling windows
# TODO: resize layout instead of window, like xmonad
mode "resize" {
  bindsym h resize grow width $resize_step_floating px or $resize_step_tiling ppt
  bindsym k resize grow height $resize_step_floating px or $resize_step_tiling ppt
  bindsym j resize grow height $resize_step_floating px or $resize_step_tiling ppt
  bindsym l resize grow width $resize_step_floating px or $resize_step_tiling ppt
  bindsym Shift+h resize shrink width $resize_step_floating px or $resize_step_tiling ppt
  bindsym Shift+k resize shrink height $resize_step_floating px or $resize_step_tiling ppt
  bindsym Shift+j resize shrink height $resize_step_floating px or $resize_step_tiling ppt
  bindsym Shift+l resize shrink width $resize_step_floating px or $resize_step_tiling ppt

  # To have finer control
  bindsym Control+h resize grow width $resize_small_step px or $resize_small_step ppt
  bindsym Control+k resize grow height $resize_small_step px or $resize_small_step ppt
  bindsym Control+j resize grow height $resize_small_step px or $resize_small_step ppt
  bindsym Control+l resize grow width $resize_small_step px or $resize_small_step ppt
  bindsym Control+Shift+h resize shrink width $resize_small_step px or $resize_small_step ppt
  bindsym Control+Shift+k resize shrink height $resize_small_step px or $resize_small_step ppt
  bindsym Control+Shift+j resize shrink height $resize_small_step px or $resize_small_step ppt
  bindsym Control+Shift+l resize shrink width $resize_small_step px or $resize_small_step ppt

  # Back to normal
  bindsym r mode "default"
}
bindsym $mod+r mode "resize"

# How many pixels would the floating window be moved
set $move_step 60
set $move_small_step 5

mode "move" {
  bindsym h move left $move_step px
  bindsym j move down $move_step px
  bindsym k move up $move_step px
  bindsym l move right $move_step px

  bindsym Control+h move left $move_small_step px
  bindsym Control+j move down $move_small_step px
  bindsym Control+k move up $move_small_step px
  bindsym Control+l move right $move_small_step px


  # Back to normal
  bindsym m mode "default"
}
bindsym $mod+m focus floating mode "move"

# TODO: only in case Polybar is installed

# TODO: what means no-startup-id
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Toggle the bar when pressing Super (keycode is 133) FIXME: when pressing and releasing with other keys
bindcode 133 exec --no-startup-id polybar-msg cmd show
bindcode 133 --release exec --no-startup-id polybar-msg cmd hide

# NOTE: previous approach
# exec_always xmodmap -e 'keysym 95 = Super_L'
# exec_always xcape -t 15000 -e 'Super_L=F12'

# bindsym F11 exec --no-startup-id polybar-msg cmd show
# bindsym --release F11 exec --no-startup-id polybar-msg cmd hide
# bindsym --release F12 exec --no-startup-id polybar-msg cmd hide

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
# 	#id TODO
# 	status_command i3status --config ~/.i3/i3status.conf
# 	mode hide
# 	position bottom
# 	workspace_buttons yes
# 	binding_mode_indicator yes
# 	font pango:DejaVu Sans Mono 11
# 	# colors TODO
#
# 	# Tray icons on primary output
# 	tray_output primary
# }

# TODO more customizable
assign [class="(?i)g?vim$"] $ws1

# TODO?
assign [class="Brave"] $ws3
assign [class="Chromium"] $ws3
assign [class="Firefox"] $ws3
# DEPRECATED
# assign [class="Vimperator"] $ws3
# TODO
assign [class="Tor Browser"] $ws3

# TODO
assign [instance="discord"] $ws4
# assign [instance="electron"] $ws4
assign [class="Pidgin"] $ws4
assign [class="Semaphor"] $ws4

assign [class="Anki"] $ws5
assign [class="Calibre"] $ws5
assign [instance="ebook-viewer"] $ws5
assign [class="Evince"] $ws5
assign [class="Mcomix"] $ws5
# TODO
assign [class="Okular"] $ws5
# TODO
assign [class="qcomicbook"] $ws5

assign [class="Gimp"] $ws6
assign [class="Hoodle"] $ws6
assign [class="Inkscape"] $ws6
assign [class="Krita"] $ws6
assign [class="Xournal"] $ws6

assign [class="Amarok"] $ws7
assign [class="Clementine"] $ws7
# TODO
assign [instance="gmusicbrowser"] $ws7
assign [class="Lollypop"] $ws7
assign [class="mpv"] $ws7
assign [class="Pavucontrol"] $ws7
assign [class="Quod Libet"] $ws7
assign [class="smplayer"] $ws7
assign [class="vlc"] $ws7

# TODO
assign [class="jDownloader"] $ws8
# TODO ?
assign [class="KTorrent"] $ws8
assign [class="Transmission"] $ws8
assign [class="Vuze"] $ws8

# TODO
assign [class="Dolphin"] $ws9
# TODO
assign [class="FSearch"] $ws9
assign [class="Nautilus"] $ws9

assign [class="Kmail"] $ws0
assign [class="Telegram"] $ws0
assign [class="Thunderbird"] $ws0

#
# Plasma Integration (from https://github.com/avivace/dotfiles)
#

# Try to kill the wallpaper set by Plasma (it takes up the entire workspace and hides everything)
exec --no-startup-id wmctrl -c Plasma
for_window [title="Desktop — Plasma"] kill; floating enable; border none

# Avoid tiling popups, dropdown windows from plasma
# It's necessary to resize them manually on first time resize. i3 will remember the setting for floating windows
for_window [class="plasmashell"] floating enable
for_window [class="Plasma"] floating enable; border none
for_window [title="plasma-desktop"] floating enable; border none
for_window [title="win7"] floating enable; border none
for_window [class="krunner"] floating enable; border none
for_window [class="Kmix"] floating enable; border none
for_window [class="Klipper"] floating enable; border none
for_window [class="Plasmoidviewer"] floating enable; border none

# Do not focus on notifications or other pop-ups
no_focus [class="plasmashell" window_type="notification"]
# no_focus [class="plasmashell" window_type="on_screen_display"]
# FIXME: Lollypop notifications could be disabled in KDE: Notifications > Application Settings

#
# Custom configuration TODO split in files
#

# Set wallpapers
exec $HOME/.i3/wallpapers.sh

# Boot applications
# exec $HOME/.dot/i3/layouts.sh 'boot'
